[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Cole Henning is a junior at the University of Nebraska- Lincoln majoring in Sports Media and Communications at the College of Journalism.\nThroughout his time studying at the University of Nebraska, he has also worked under the Athletic Department with HuskerVision. Preparing himself for the world of live sports broadcasting. Familiarizing himself with running cameras, setting up radio equipment, using EVS replay, and producing for Big Ten Student U.\nCole has worked to develop his coding skills in both high school and college. Focusing on sports data and visualization."
  },
  {
    "objectID": "posts/alain-prost-missing-championships/index.html",
    "href": "posts/alain-prost-missing-championships/index.html",
    "title": "Alain Prost Missing Championships",
    "section": "",
    "text": "Retroactively applying the current scoring system yields some interesting results. One driver stands out more than any other. That driver is Alain Prost. The current scoring system would add three more championships to his name for a total of seven world championship titles, a record that would go unmatched until 2020 by Lewis Hamilton.\nThe results speak volumes for the ability and excellence Prost has shown as a driver and the heartbreaking fashion he has lost titles.\nThe 80s scoring system only counted a driver’s top 11 placed finishes despite 16 races being held a season. The system also awarded on a 9–6–4–3–2–1 basis to the first six finishers in each race. Current scoring counts all races and awards the top 10 drivers on a 25-18-15-12-10-8-6-4-2-1 basis.\nFirst we will look at the 1983 season. Where Prost came two points shy of winning the title under the scoring of the time.\n\n\nCode\nlibrary(tidyverse)\nlibrary(waffle)\nlibrary(ggtext)\nlibrary(cowplot)\n\nresults <- read_csv(\"results.csv\")\nraces <- read_csv(\"races.csv\")\ndrivers <- read_csv(\"drivers.csv\")\n\nresultsyear <- results %>% left_join(races, by = c(\"raceId\"))\nresultsyearID <- resultsyear %>% left_join(drivers, by = c(\"driverId\")) %>%\n  mutate(\n    name = paste(forename, surname)\n  )\n\nresultsfinal <- resultsyearID %>%\n  select(name, positionOrder, points, year, round, name) %>%\n  mutate(\n    newpoints = case_when(\n      positionOrder == 1 ~25,\n      positionOrder == 2 ~18,\n      positionOrder == 3 ~15,\n      positionOrder == 4 ~12,\n      positionOrder == 5 ~10,\n      positionOrder == 6 ~8,\n      positionOrder == 7 ~6,\n      positionOrder == 8 ~4,\n      positionOrder == 9 ~2,\n      positionOrder == 10 ~1,\n      TRUE ~0\n    ) \n  )\n\neightythree <- resultsfinal %>%\n  filter(year == 1983) %>%\n  group_by(name)\neightythreesummary <- eightythree %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\neightythreetop5new <- eightythreesummary %>% \n  arrange(desc(totalnewpoints)) %>% \n  top_n(5) %>% \n  select(name, totalnewpoints)\n\neightythreetop5old <- eightythreesummary %>% \n  arrange(desc(totalpoints)) %>% \n  top_n(5) %>% \n  select(name, totalpoints)\n\nprostnew <-eightythreetop5new %>% filter(name == \"Alain Prost\")\nprostold <- eightythreetop5old %>% filter(name == \"Alain Prost\")\n\nbar1 <- ggplot() + \n  geom_bar(data=eightythreetop5old, aes(x=reorder(name,totalpoints), weight=totalpoints)) +\n  geom_bar(data=prostold, aes(x=reorder(name,totalpoints), weight=totalpoints), fill=\"#c60000\") +\n  coord_flip() +\nlabs(title=\"1983 Championship Standings; Old/New Scoring\", subtitle = \"Alain Prost would have loved the current point system\",  x=\"\", y=\"Old Points\", caption = \"\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\nbar2 <- ggplot() + \n  geom_bar(data=eightythreetop5new, aes(x=reorder(name,totalnewpoints), weight=totalnewpoints)) +\n  geom_bar(data=prostnew, aes(x=reorder(name,totalnewpoints), weight=totalnewpoints), fill=\"#C60000\") +\n  coord_flip() +\n  labs(title=\"\", subtitle = \"\",  x=\"\", y=\"New Points\", caption = \"Source: Wikipedia | By: Cole Henning\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\nplot_grid(bar1, bar2, ncol=1) \n\n\n\n\n\nThe next season Prost found himself in an all too similar scenario losing out on the championship with an even smaller margin of defeat of half a point. Despite finishing with two more wins than rival Nika Lauda.\n\n\nCode\neightyfour <- resultsfinal %>%\nfilter(year == 1984) %>%\n  group_by(name)\n\neightyfoursummary <- eightyfour %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\ndiff84 <- eightyfour %>% \n  group_by(name) %>% \n  mutate(CumPoints = cumsum(points)) %>%\n  mutate(NewCumPoints = cumsum(newpoints))\n\nprost84 <- diff84 %>% filter(name == \"Alain Prost\")\nlauda84 <- diff84 %>% filter(name == \"Niki Lauda\")\n\ncombined <- bind_rows(prost84, lauda84)\n\nggplot() + \n  geom_step(data=combined, aes(x=round, y=CumPoints, group=name, color=name))+\n  geom_step(data=combined, aes(x=round, y=NewCumPoints, group=name, color=name))+\n  scale_color_manual(values= c(\"#c60000\", \"#005B90\"))+\n  scale_y_continuous(limits = c(0, 230)) + \n  annotate(\n    \"text\", \n    x=14, \n    y=218, \n    label=\"New Points\") +\n  annotate(\n    \"text\", \n    x=14, \n    y=80, \n    label=\"Old Points\") +\n  labs(\n    x=\"Round\", \n    y=\"Cumulative Points\", \n    title=\"1984 Championship changes hands with modern scoring\", \n    subtitle=\"Modern scoring rewards Prost's consistancy and ability to finish races\", \n    caption=\"Source: Wikipedia | By Cole Henning\") +\n  theme_minimal()+\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\n\n\n\n\nAfter two heartbreaking championship battles, Prost managed to win two in a row. Shortly after he would lose by three points in 1988 to teammate Aryton Senna. In a season where Prost finished first or second in every race he completed he lost the championship. As Senna secured one more win than Prost to put him over the edge.\n\n\nCode\neightyeight <- resultsfinal %>%\n  filter(year == 1988) %>%\n  group_by(name)\n\neightyeightsummary <- eightyeight %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\nprost <- c(\"Old Points\"=87, \"New Points\"=214)\nsenna <- c(\"Old Points\"=90, \"New Points\"=185, 26)\n\niron(\n waffle(prost, \n        rows = 10, \n        xlab=\"Prost\", \n        colors = c(\"black\", \"#c60000\"))+\n   labs(\n     title=\"1988 Hindsight Title Fight\", \n     subtitle=\"Senna shines under the old scoring;\nProst wishing the full resume was considered\") + \n   theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n    ),\n waffle(senna, \n        rows = 10, \n        xlab=\"Senna\\n1 square = 1 point\", \n        colors = c(\"black\", \"#EDD35A\", \"white\"))+\n   labs(caption=\"Source: Wikipedia | Graphic by Cole Henning\")\n)\n\n\n\n\n\nWhile the past can’t be changed, Prost’s career is one filled with what-ifs. He made a living and won four championships off of his consistently elite driving. The scoring system of the time truly fails to show his ability as a driver.\nAfter looking at these results I can’t help but wonder that if the current point system had been in place, would we be talking about Prost in the same conversations as Michael Schumacher and Lewis Hamilton"
  },
  {
    "objectID": "posts/detroit-decade-of-despair/index.html",
    "href": "posts/detroit-decade-of-despair/index.html",
    "title": "Detroit’s Decade of Despair",
    "section": "",
    "text": "Let’s look at the past ten years and compare the 12 cities with a team for all the big four American sports. First, by looking at regular season success and then at post-season success.\nTwo cities stand out and for opposite reasons. Boston has seen success at unprecedented levels, winning 5 titles and reaching the title game in all four sports within the last ten years. Then there’s Detroit. A city that hasn’t been in the playoffs since 2019 and hasn’t seen the second round since 2014. To say Detroit fans have had it rough is an understatement. No other sports city compares to this level of failure, Motown has been rebuilding since the Obama administration and has just begun to see a glimmer of hope.\nThis is Detroit’s decade of despair.\nFirst let’s look at the big picture, the total win percentage across all four sports over the past ten years for each city. For cities like New York and Los Angeles which have multiple teams for one sport, the average was used for that respective sport. Detroit is unsurprisingly dead last.\n\n\nCode\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(ggalt)\nlibrary(gt)\nlibrary(ggtext)\n\nmlb22 <- read_csv(\"mlb22standings.csv\") %>% mutate(season=2022)\nmlb21 <- read_csv(\"mlb21standings.csv\") %>% mutate(season=2021)\nmlb20 <- read_csv(\"mlb20standings.csv\") %>% mutate(season=2020)\nmlb19 <- read_csv(\"mlb19standings.csv\") %>% mutate(season=2019)\nmlb18 <- read_csv(\"mlb18standings.csv\") %>% mutate(season=2018)\nmlb17 <- read_csv(\"mlb17standings.csv\") %>% mutate(season=2017)\nmlb16 <- read_csv(\"mlb16standings.csv\") %>% mutate(season=2016)\nmlb15 <- read_csv(\"mlb15standings.csv\") %>% mutate(season=2015)\nmlb14 <- read_csv(\"mlb14standings.csv\") %>% mutate(season=2014)\nmlb13 <- read_csv(\"mlb13standings.csv\") %>% mutate(season=2013)\n\nmlb <- bind_rows(mlb22, mlb21, mlb20, mlb19, mlb18, mlb17, mlb16, mlb15, mlb14, mlb13)\n\nnba22 <- read_csv(\"nba22standings.csv\") %>% mutate(season=2022) \nnba21 <- read_csv(\"nba21standings.csv\") %>% mutate(season=2021)\nnba20 <- read_csv(\"nba20standings.csv\") %>% mutate(season=2020)\nnba19 <- read_csv(\"nba19standings.csv\") %>% mutate(season=2019)\nnba18 <- read_csv(\"nba18standings.csv\") %>% mutate(season=2018)\nnba17 <- read_csv(\"nba17standings.csv\") %>% mutate(season=2017)\nnba16 <- read_csv(\"nba16standings.csv\") %>% mutate(season=2016)\nnba15 <- read_csv(\"nba15standings.csv\") %>% mutate(season=2015)\nnba14 <- read_csv(\"nba14standings.csv\") %>% mutate(season=2014)\nnba13 <- read_csv(\"nba13standings.csv\") %>% mutate(season=2013)\n\nnba <- bind_rows(nba22, nba21, nba20, nba19, nba18, nba17, nba16, nba15, nba14, nba13)\n\nnfl22 <- read_csv(\"nfl22standings.csv\") %>% mutate(season=2022) \nnfl21 <- read_csv(\"nfl21standings.csv\") %>% mutate(season=2021)\nnfl20 <- read_csv(\"nfl20standings.csv\") %>% mutate(season=2020)\nnfl19 <- read_csv(\"nfl19standings.csv\") %>% mutate(season=2019)\nnfl18 <- read_csv(\"nfl18standings.csv\") %>% mutate(season=2018)\nnfl17 <- read_csv(\"nfl17standings.csv\") %>% mutate(season=2017)\nnfl16 <- read_csv(\"nfl16standings.csv\") %>% mutate(season=2016)\nnfl15 <- read_csv(\"nfl15standings.csv\") %>% mutate(season=2015)\nnfl14 <- read_csv(\"nfl14standings.csv\") %>% mutate(season=2014)\nnfl13 <- read_csv(\"nfl13standings.csv\") %>% mutate(season=2013)\n\nnfl <- bind_rows(nfl22, nfl21, nfl20, nfl19, nfl18, nfl17, nfl16, nfl15, nfl14, nfl13)\n\nnhl22 <- read_csv(\"nhl22standings.csv\") %>% mutate(season=2022)\nnhl21 <- read_csv(\"nhl21standings.csv\") %>% mutate(season=2021)\nnhl20 <- read_csv(\"nhl20standings.csv\") %>% mutate(season=2020)\nnhl19 <- read_csv(\"nhl19standings.csv\") %>% mutate(season=2019)\nnhl18 <- read_csv(\"nhl18standings.csv\") %>% mutate(season=2018)\nnhl17 <- read_csv(\"nhl17standings.csv\") %>% mutate(season=2017)\nnhl16 <- read_csv(\"nhl16standings.csv\") %>% mutate(season=2016)\nnhl15 <- read_csv(\"nhl15standings.csv\") %>% mutate(season=2015)\nnhl14 <- read_csv(\"nhl14standings.csv\") %>% mutate(season=2014)\nnhl13 <- read_csv(\"nhl13standings.csv\") %>% mutate(season=2013)\n\nnhl <- bind_rows(nhl22, nhl21, nhl20, nhl19, nhl18, nhl17, nhl16, nhl15, nhl14, nhl13)\n\nnhlcross <- crosswalk <- read_csv(\"Blog2City.csv\")\n\nnhlfinal <- nhl %>% left_join(crosswalk, by=c(\"...2\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(...2))\n\nnbafinal <- nba %>% left_join(crosswalk, by=c(\"Team\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Team))\n\nmlbfinal <- mlb %>% left_join(crosswalk, by=c(\"Tm\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Tm))\n\nnflfinal <- nfl %>% left_join(crosswalk, by=c(\"Tm\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Tm))\n\nnhlfinal <- nhlfinal %>% separate(Overall, into=c(\"W\", \"L\", \"T\"), sep=\"-\") %>% \n  mutate(\"W-L%\" = as.numeric(W)/(as.numeric(W)+as.numeric(L)+as.numeric(T)))\n\nnbafinal <- nbafinal %>% separate(Overall, into=c(\"W\", \"L\"), sep=\"-\") %>% \n  mutate(\"W-L%\" = as.numeric(W)/(as.numeric(W)+as.numeric(L)))\n\nnbapct <- nbafinal %>% \n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totallosses), Sport=\"Basketball\") %>%\n  select(City, Sport, citywinpercent)\n\nmlbpct <- mlbfinal %>% \n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totallosses), Sport=\"Baseball\") %>%\n  select(City, Sport, citywinpercent)\n\nnflpct <- nflfinal %>% \n  mutate(T = ifelse(is.na(T),0,T)) %>%\n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totalties = sum(as.numeric(T)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totalties+totallosses), Sport=\"Football\") %>%\n  select(City, Sport, citywinpercent)\n\nnhlpct <- nhlfinal %>% \n  mutate(T = ifelse(is.na(T),0,T)) %>%\n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totalties = sum(as.numeric(T)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totalties+totallosses), Sport=\"Hockey\") %>%\n  select(City, Sport, citywinpercent)\n\nwinpct <- bind_rows(nhlpct, nflpct, mlbpct, nbapct)\n\nggplot() + \n  geom_bar(\n    data=winpct, \n    aes(x=reorder(City, citywinpercent), \n        weight=citywinpercent, \n        fill=Sport)) + \n  labs(\n    title=\"Sports Cities cumulative win percentage\",\n    subtitle= \"Detroit dead last, as all four teams face rebuilds\",\n    x=\"\", \n    y=\"Total Win Percent\",\n    caption = \"Source: Sports Reference | By: Cole Henning\")+\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    plot.title.position = \"plot\"\n    ) +\n  coord_flip() +\nscale_fill_manual(values = c(\"#9D2235\", \"#FFA300\", \"#006272\", \"#007500\"))\n\n\n\n\n\nNow let’s take a closer look at that and view each sport individually. To be cumulatively the worst city, each sport needs to do its part and the Motor City was misfiring on all cylinders. As no Detroit team was able to reach above a .450 win percentage over the last decade.\n\n\nCode\nredwings <- nhlpct %>% filter(City == \"Detroit\")\npistons <- nbapct %>% filter(City == \"Detroit\")\ntigers <- mlbpct %>% filter(City == \"Detroit\")\nlions <- nflpct %>% filter(City == \"Detroit\")\n\nhockey <- ggplot() + \n  geom_bar(data=nhlpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=redwings, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#CE1126\") +\n  coord_flip() +\n  labs(title = \"Detroit is in the basement for all four major sports\", subtitle= \"It does not matter the sport, Detroit is going to be bad at it\", x=\"NHL\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(0, .7)) + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12),\n    axis.text.y = element_text(size=6),\n    plot.title.position = \"plot\"\n    )\n\nbasketball <- ggplot() + \n  geom_bar(data=nbapct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=pistons, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#1D42BA\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"NBA\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12), \n    axis.text.y = element_text(size=6),\n    )\n\nbaseball <- ggplot() + \n  geom_bar(data=mlbpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=tigers, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#FA4616\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"MLB\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12), \n    axis.text.y = element_text(size=6),\n    )\n\nfootball <- ggplot() + \n  geom_bar(data=nflpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=lions, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#0076B6\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"NFL\", y=\"Win Percentage\", caption=\"Source: Sports Reference | By: Cole Henning\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12),\n    axis.text.y = element_text(size=6),\n    )\n\nplot_grid(hockey, basketball, baseball, football) \n\n\n\n\n\nFinally, taking a look at the post-season completes the picture. For this, a post-season scoring system was needed. 100 points are awarded for a championship, 50 points for reaching the championship, 25 points for reaching the semi-finals, 12.5 points for reaching the second, and 6.5 points for making the playoffs. This system does tilt the balance in favor of cities with more teams, yet Boston still remains on top.\nDetroit is once again at the bottom. This comes naturally as Detroit has been absent for the post-season for years. The wheels fell off for the red wings 25 season playoff streak in 2016 and Detroit hasn’t won a playoff game since.\n\n\nCode\nplayoffs <- read_csv(\"Blog2Playoffs.csv\")\n\nplayoffsfinal <- playoffs %>% \n  group_by(City) %>%\nsummarise(totalpoints = sum(thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, nineteen, twenty,    twentyone,twentytwo))\n\ndetroit <- playoffsfinal %>% filter(City == \"Detroit\")\n\nggplot() + \n  geom_lollipop(\n    data=playoffsfinal, \n    aes(y=reorder(City, totalpoints), x=totalpoints), \n    horizontal = TRUE\n    ) + \n  geom_lollipop(\n    data=detroit,\n    aes(y=City, x=totalpoints),\n    horizontal = TRUE,\n    color = \"red\"\n  ) + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    plot.title.position = \"plot\"\n    ) +\n  labs(title = \"Detroit is the worst city in the playoffs\",\n       subtitle = \"Detroit has failed to perform with the few playoff appearances they have had\",\n       x=\"Total Playoff Points\",\n       y=\"\",\n       caption = \"Source: Wikipedia | By: Cole Henning\")\n\n\n\n\n\nWith a beloved kneecap-eating coach with the Lions and a promising and young core with the Pistons, not all is doom and gloom in Detroit. Many fans are hopeful and looking forward to the future of sports in the Motor City as the past ten years are some to forget."
  },
  {
    "objectID": "project2/blog2work.html",
    "href": "project2/blog2work.html",
    "title": "Blog",
    "section": "",
    "text": "mlb22 <- read_csv(\"mlb22standings.csv\") %>% mutate(season=2022)\n\nRows: 31 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (18): Tm, Strk, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb21 <- read_csv(\"mlb21standings.csv\") %>% mutate(season=2021)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb20 <- read_csv(\"mlb20standings.csv\") %>% mutate(season=2020)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb19 <- read_csv(\"mlb19standings.csv\") %>% mutate(season=2019)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb18 <- read_csv(\"mlb18standings.csv\") %>% mutate(season=2018)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb17 <- read_csv(\"mlb17standings.csv\") %>% mutate(season=2017)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb16 <- read_csv(\"mlb16standings.csv\") %>% mutate(season=2016)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb15 <- read_csv(\"mlb15standings.csv\") %>% mutate(season=2015)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb14 <- read_csv(\"mlb14standings.csv\") %>% mutate(season=2014)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb13 <- read_csv(\"mlb13standings.csv\") %>% mutate(season=2013)\n\nRows: 31 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Tm, pythWL, vEast, vCent, vWest, Inter, Home, Road, ExInn, 1Run, v...\ndbl (10): Rk, W, L, W-L%, R, RA, Rdiff, SOS, SRS, Luck\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmlb <- bind_rows(mlb22, mlb21, mlb20, mlb19, mlb18, mlb17, mlb16, mlb15, mlb14, mlb13)\n\n\nnba22 <- read_csv(\"nba22standings.csv\") %>% mutate(season=2022) \n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba21 <- read_csv(\"nba21standings.csv\") %>% mutate(season=2021)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba20 <- read_csv(\"nba20standings.csv\") %>% mutate(season=2020)\n\nRows: 30 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba19 <- read_csv(\"nba19standings.csv\") %>% mutate(season=2019)\n\nRows: 30 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (24): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba18 <- read_csv(\"nba18standings.csv\") %>% mutate(season=2018)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba17 <- read_csv(\"nba17standings.csv\") %>% mutate(season=2017)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba16 <- read_csv(\"nba16standings.csv\") %>% mutate(season=2016)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba15 <- read_csv(\"nba15standings.csv\") %>% mutate(season=2015)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba14 <- read_csv(\"nba14standings.csv\") %>% mutate(season=2014)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba13 <- read_csv(\"nba13standings.csv\") %>% mutate(season=2013)\n\nRows: 30 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Team, Overall, Home, Road, E, W, A, C, SE, NW, P, SW, Pre, Post, ≤...\ndbl  (1): Rk\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnba <- bind_rows(nba22, nba21, nba20, nba19, nba18, nba17, nba16, nba15, nba14, nba13)\n\n\nnfl22 <- read_csv(\"nfl22standings.csv\") %>% mutate(season=2022) \n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl21 <- read_csv(\"nfl21standings.csv\") %>% mutate(season=2021)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl20 <- read_csv(\"nfl20standings.csv\") %>% mutate(season=2020)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl19 <- read_csv(\"nfl19standings.csv\") %>% mutate(season=2019)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl18 <- read_csv(\"nfl18standings.csv\") %>% mutate(season=2018)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl17 <- read_csv(\"nfl17standings.csv\") %>% mutate(season=2017)\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (11): W, L, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl16 <- read_csv(\"nfl16standings.csv\") %>% mutate(season=2016)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl15 <- read_csv(\"nfl15standings.csv\") %>% mutate(season=2015)\n\nRows: 32 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (11): W, L, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl14 <- read_csv(\"nfl14standings.csv\") %>% mutate(season=2014)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl13 <- read_csv(\"nfl13standings.csv\") %>% mutate(season=2013)\n\nRows: 32 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (12): W, L, T, W-L%, PF, PA, PD, MoV, SoS, SRS, OSRS, DSRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnfl <- bind_rows(nfl22, nfl21, nfl20, nfl19, nfl18, nfl17, nfl16, nfl15, nfl14, nfl13)\n\n\nnhl22 <- read_csv(\"nhl22standings.csv\") %>% mutate(season=2022)\n\nNew names:\nRows: 32 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl21 <- read_csv(\"nhl21standings.csv\") %>% mutate(season=2021)\n\nNew names:\nRows: 32 Columns: 23\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(22): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl20 <- read_csv(\"nhl20standings.csv\") %>% mutate(season=2020)\n\nNew names:\nRows: 31 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(17): ...2, Overall, Shootout, Overtime, Home, Road, CEN, EAS, NTH, WES,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl19 <- read_csv(\"nhl19standings.csv\") %>% mutate(season=2019)\n\nNew names:\nRows: 31 Columns: 21\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(20): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl18 <- read_csv(\"nhl18standings.csv\") %>% mutate(season=2018)\n\nNew names:\nRows: 31 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl17 <- read_csv(\"nhl17standings.csv\") %>% mutate(season=2017)\n\nNew names:\nRows: 31 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl16 <- read_csv(\"nhl16standings.csv\") %>% mutate(season=2016)\n\nNew names:\nRows: 30 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl15 <- read_csv(\"nhl15standings.csv\") %>% mutate(season=2015)\n\nNew names:\nRows: 30 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl14 <- read_csv(\"nhl14standings.csv\") %>% mutate(season=2014)\n\nNew names:\nRows: 30 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl13 <- read_csv(\"nhl13standings.csv\") %>% mutate(season=2013)\n\nNew names:\nRows: 30 Columns: 22\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(21): ...2, Overall, Shootout, Overtime, Home, Road, EAS, WES, ATL, MET,... dbl\n(1): Rk\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...2`\n\nnhl <- bind_rows(nhl22, nhl21, nhl20, nhl19, nhl18, nhl17, nhl16, nhl15, nhl14, nhl13)\n\n\nnhlcross <- crosswalk <- read_csv(\"Blog2City.csv\")\n\nRows: 58 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): City, Team, Sport\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnhlfinal <- nhl %>% left_join(crosswalk, by=c(\"...2\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(...2))\n\n\nnbafinal <- nba %>% left_join(crosswalk, by=c(\"Team\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Team))\n\n\nmlbfinal <- mlb %>% left_join(crosswalk, by=c(\"Tm\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Tm))\n\n\nnflfinal <- nfl %>% left_join(crosswalk, by=c(\"Tm\"=\"Team\")) %>% filter(is.na(City) == FALSE) %>%\n arrange(desc(Tm))\n\n\nnhlfinal <- nhlfinal %>% separate(Overall, into=c(\"W\", \"L\", \"T\"), sep=\"-\") %>% \n  mutate(\"W-L%\" = as.numeric(W)/(as.numeric(W)+as.numeric(L)+as.numeric(T)))\n\n\nnbafinal <- nbafinal %>% separate(Overall, into=c(\"W\", \"L\"), sep=\"-\") %>% \n  mutate(\"W-L%\" = as.numeric(W)/(as.numeric(W)+as.numeric(L)))\n\n\nnbapct <- nbafinal %>% \n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totallosses), Sport=\"Basketball\") %>%\n  select(City, Sport, citywinpercent)\n\n\nmlbpct <- mlbfinal %>% \n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totallosses), Sport=\"Baseball\") %>%\n  select(City, Sport, citywinpercent)\n\n\nnflpct <- nflfinal %>% \n  mutate(T = ifelse(is.na(T),0,T)) %>%\n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totalties = sum(as.numeric(T)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totalties+totallosses), Sport=\"Football\") %>%\n  select(City, Sport, citywinpercent)\n\n\nnhlpct <- nhlfinal %>% \n  mutate(T = ifelse(is.na(T),0,T)) %>%\n  group_by(City) %>%\nsummarise(totalwins = sum(as.numeric(W)),\n          totalties = sum(as.numeric(T)),\n          totallosses = sum(as.numeric(L))) %>%\nmutate(citywinpercent = totalwins/(totalwins+totalties+totallosses), Sport=\"Hockey\") %>%\n  select(City, Sport, citywinpercent)\n\n\nwinpct <- bind_rows(nhlpct, nflpct, mlbpct, nbapct)\n\n\nggplot() + \n  geom_bar(\n    data=winpct, \n    aes(x=reorder(City, citywinpercent), \n        weight=citywinpercent, \n        fill=Sport)) + \n  labs(\n    title=\"Sports Cities cumulative win percentage\",\n    subtitle= \"Detroit dead last, as all four teams face rebuilds\",\n    x=\"\", \n    y=\"Total Win Percent\",\n    caption = \"Source: Sports Reference | By: Cole Henning\")+\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    plot.title.position = \"plot\"\n    ) +\n  coord_flip() +\nscale_fill_manual(values = c(\"#9D2235\", \"#FFA300\", \"#006272\", \"#007500\"))\n\n\n\n\n\nredwings <- nhlpct %>% filter(City == \"Detroit\")\npistons <- nbapct %>% filter(City == \"Detroit\")\ntigers <- mlbpct %>% filter(City == \"Detroit\")\nlions <- nflpct %>% filter(City == \"Detroit\")\n\nhockey <- ggplot() + \n  geom_bar(data=nhlpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=redwings, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#CE1126\") +\n  coord_flip() +\n  labs(title = \"Detroit is in the basement for all four major sports\", subtitle= \"It does not matter the sport, Detroit is going to be bad at it\", x=\"NHL\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  scale_y_continuous(limits = c(0, .7)) + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12),\n    axis.text.y = element_text(size=6),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\nbasketball <- ggplot() + \n  geom_bar(data=nbapct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=pistons, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#1D42BA\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"NBA\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12), \n    axis.text.y = element_text(size=6),\n    )\n\nbaseball <- ggplot() + \n  geom_bar(data=mlbpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=tigers, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#FA4616\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"MLB\", y=\"Win Percentage\",  caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12), \n    axis.text.y = element_text(size=6),\n    )\n\nfootball <- ggplot() + \n  geom_bar(data=nflpct, aes(x=reorder(City, citywinpercent), weight=citywinpercent)) +\n  geom_bar(data=lions, aes(x=reorder(City, citywinpercent), weight=citywinpercent), fill=\"#0076B6\") +\n  coord_flip()+\n  scale_y_continuous(limits = c(0, .7)) + \n  labs(title = \"\", subtitle= \"\", x=\"NFL\", y=\"Win Percentage\", caption=\"Source: Sports Reference | By: Cole Henning\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=12),\n    axis.text.y = element_text(size=6),\n    )\n\n\nplot_grid(hockey, basketball, baseball, football) \n\n\n\n\n\nplayoffs <- read_csv(\"Blog2Playoffs.csv\")\n\nRows: 58 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): City, Team, Sport\ndbl (10): thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, ninetee...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nplayoffsfinal <- playoffs %>% \n  group_by(City) %>%\nsummarise(totalpoints = sum(thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, nineteen, twenty,    twentyone,twentytwo))\n\n\ndetroit <- playoffsfinal %>% filter(City == \"Detroit\")\n\nggplot() + \n  geom_lollipop(\n    data=playoffsfinal, \n    aes(y=reorder(City, totalpoints), x=totalpoints), \n    horizontal = TRUE\n    ) + \n  geom_lollipop(\n    data=detroit,\n    aes(y=City, x=totalpoints),\n    horizontal = TRUE,\n    color = \"red\"\n  ) + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    ) +\n  labs(title = \"Detroit is the worst city in the playoffs\",\n       subtitle = \"Detroit has failed to perform with the few playoff appearances they have had\",\n       x=\"Total Playoff Points\",\n       y=\"\",\n       caption = \"Source: Wikipedia | By: Cole Henning\")"
  },
  {
    "objectID": "projectwork.html",
    "href": "projectwork.html",
    "title": "Blog",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(waffle)\nlibrary(ggtext)\nlibrary(cowplot)\n\nNext we will load our data in\n\nresults <- read_csv(\"results.csv\")\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 25660 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): position, positionText, time, milliseconds, fastestLap, rank, fast...\ndbl (10): resultId, raceId, driverId, constructorId, number, grid, positionO...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nraces <- read_csv(\"races.csv\")\n\nRows: 1079 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (13): name, time, url, fp1_date, fp1_time, fp2_date, fp2_time, fp3_date...\ndbl   (4): raceId, year, round, circuitId\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndrivers <- read_csv(\"drivers.csv\")\n\nRows: 854 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (7): driverRef, number, code, forename, surname, nationality, url\ndbl  (1): driverId\ndate (1): dob\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nNow we will join our two dataframes together using left_join\n\nresultsyear <- results %>% left_join(races, by = c(\"raceId\"))\n\n\nresultsyearID <- resultsyear %>% left_join(drivers, by = c(\"driverId\")) %>%\n  mutate(\n    name = paste(forename, surname)\n  )\n\n\nresultsfinal <- resultsyearID %>%\n  select(name, positionOrder, points, year, round, name) %>%\n  mutate(\n    newpoints = case_when(\n      positionOrder == 1 ~25,\n      positionOrder == 2 ~18,\n      positionOrder == 3 ~15,\n      positionOrder == 4 ~12,\n      positionOrder == 5 ~10,\n      positionOrder == 6 ~8,\n      positionOrder == 7 ~6,\n      positionOrder == 8 ~4,\n      positionOrder == 9 ~2,\n      positionOrder == 10 ~1,\n      TRUE ~0\n    ) \n  )\n\n\neightythree <- resultsfinal %>%\n  filter(year == 1983) %>%\n  group_by(name)\n\n\nhead(eightythree)\n\n# A tibble: 6 × 6\n# Groups:   name [6]\n  name            positionOrder points  year round newpoints\n  <chr>                   <dbl>  <dbl> <dbl> <dbl>     <dbl>\n1 Nelson Piquet               1      9  1983     1        25\n2 Niki Lauda                  2      4  1983     1        18\n3 Jacques Laffite             3      3  1983     1        15\n4 Patrick Tambay              4      2  1983     1        12\n5 Marc Surer                  5      1  1983     1        10\n6 Alain Prost                 6      0  1983     1         8\n\n\n\neightythreesummary <- eightythree %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\n\neightythreetop5new <- eightythreesummary %>% \n  arrange(desc(totalnewpoints)) %>% \n  top_n(5) %>% \n  select(name, totalnewpoints)\n\nSelecting by totalnewpoints\n\n\n\neightythreetop5old <- eightythreesummary %>% \n  arrange(desc(totalpoints)) %>% \n  top_n(5) %>% \n  select(name, totalpoints)\n\nSelecting by totalnewpoints\n\n\n\nprostnew <-eightythreetop5new %>% filter(name == \"Alain Prost\")\nprostold <- eightythreetop5old %>% filter(name == \"Alain Prost\")\n\n\nbar1 <- ggplot() + \n  geom_bar(data=eightythreetop5old, aes(x=reorder(name,totalpoints), weight=totalpoints)) +\n  geom_bar(data=prostold, aes(x=reorder(name,totalpoints), weight=totalpoints), fill=\"#c60000\") +\n  coord_flip() +\nlabs(title=\"1983 Championship Standings\", subtitle = \"Alain Prost would have loved the current point system\",  x=\"\", y=\"Old Points\", caption = \"\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\n\nbar2 <- ggplot() + \n  geom_bar(data=eightythreetop5new, aes(x=reorder(name,totalnewpoints), weight=totalnewpoints)) +\n  geom_bar(data=prostnew, aes(x=reorder(name,totalnewpoints), weight=totalnewpoints), fill=\"#C60000\") +\n  coord_flip() +\n  labs(title=\"\", subtitle = \"\",  x=\"\", y=\"New Points\", caption = \"Source: Wikipedia | By: Cole Henning\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\n\nplot_grid(bar1, bar2, ncol=1) \n\n\n\n\n\neightyfour <- resultsfinal %>%\nfilter(year == 1984) %>%\n  group_by(name)\n\n\neightyfoursummary <- eightyfour %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\n\ndiff84 <- eightyfour %>% \n  group_by(name) %>% \n  mutate(CumPoints = cumsum(points)) %>%\n  mutate(NewCumPoints = cumsum(newpoints))\n\n\nprost84 <- diff84 %>% filter(name == \"Alain Prost\")\nlauda84 <- diff84 %>% filter(name == \"Niki Lauda\")\n\n\ncombined <- bind_rows(prost84, lauda84)\n\nggplot() + \n  geom_step(data=combined, aes(x=round, y=CumPoints, group=name, color=name))+\n  geom_step(data=combined, aes(x=round, y=NewCumPoints, group=name, color=name))+\n  scale_color_manual(values= c(\"#c60000\", \"#005B90\"))+\n  scale_y_continuous(limits = c(0, 230)) + \n  annotate(\n    \"text\", \n    x=14, \n    y=218, \n    label=\"New Points\") +\n  annotate(\n    \"text\", \n    x=14, \n    y=80, \n    label=\"Old Points\") +\n  labs(\n    x=\"Round\", \n    y=\"Cumulative Points\", \n    title=\"1984 Championship changes hands with modern scoring\", \n    subtitle=\"Modern scoring rewards Prost's consistancy and ability to finish races\", \n    caption=\"Source: Wikipedia | By Cole Henning\") +\n  theme_minimal()+\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_markdown(size=12), \n    panel.grid.minor = element_blank()\n    ) \n\n\n\n\nconverting…\n\neightyeight <- resultsfinal %>%\n  filter(year == 1988) %>%\n  group_by(name)\n\n\neightyeightsummary <- eightyeight %>%\n  group_by(name) %>%\n  summarise(\n    totalpoints = sum(points),\n    totalnewpoints = sum(newpoints)\n  )\n\n\nprost <- c(\"Old Points\"=87, \"New Points\"=214)\nsenna <- c(\"Old Points\"=90, \"New Points\"=185, 26)\n\n\niron(\n waffle(prost, \n        rows = 10, \n        xlab=\"Prost\", \n        colors = c(\"black\", \"#c60000\"))+\n   labs(\n     title=\"1988 Hindsight Title Fight\", \n     subtitle=\"Senna shines under the old scoring;\nProst wishing the full resume was considered\") + \n   theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank()\n    ),\n waffle(senna, \n        rows = 10, \n        xlab=\"Senna\\n1 square = 1 point\", \n        colors = c(\"black\", \"#EDD35A\", \"white\"))+\n   labs(caption=\"Source: Wikipedia | Graphic by Cole Henning\")\n)"
  }
]